<% layout("./layouts/boilerplate.ejs") %>
<style>
.rows {
  display: flex;
  flex-wrap: wrap;
}
.popover {
    position: fixed;
    
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-width: 100%;
    background-color: #ffffff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    padding: 20px;
  }

  .popover-header {
    font-weight: bold;
    font-size: 20px;
    margin-bottom: 10px;
  }

  .popover-body {
    font-size: 16px;
    line-height: 1.5;
  }
.card {
  flex: 1 0 20%; /* Each card takes up 20% of the width */
  margin: 0 10px;
}

@media (max-width: 768px) {
  .card {
    flex: 1 0 100%;
    margin-left: 50px; /* Each card takes up 100% of the width on small devices */
  }
  .popover{
    width: 80%;
  }
}

.card {
  overflow: hidden;
  position: relative;
  text-align: left;
  border-radius: 0.5rem;
  max-width: 290px;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  background-color: #fff;
}

.dismiss {
  position: absolute;
  right: 10px;
  top: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  background-color: #fff;
  color: black;
  border: 2px solid #D1D5DB;
  font-size: 1rem;
  font-weight: 300;
  width: 30px;
  height: 30px;
  border-radius: 7px;
  transition: .3s ease;
}

.dismiss:hover {
  background-color: #ee0d0d;
  border: 2px solid #ee0d0d;
  color: #fff;
}

.header {
  padding: 1.25rem 1rem 1rem 1rem;
}

.image {
  display: flex;
  margin-left: auto;
  margin-right: auto;
  background-color: #e2feee;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;
  width: 3rem;
  height: 3rem;
  border-radius: 9999px;
  animation: animate .6s linear alternate-reverse infinite;
  transition: .6s ease;
}

.image svg {
  color: #0afa2a;
  width: 2rem;
  height: 2rem;
}

.content {
  margin-top: 0.75rem;
  text-align: center;
}

.title {
  color: #066e29;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.5rem;
}

.message {
  margin-top: 0.5rem;
  color: #595b5f;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.actions {
  margin: 0.75rem 1rem;
}

.history {
  display: inline-flex;
  padding: 0.5rem 1rem;
  background-color: #1aa06d;
  color: #ffffff;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 500;
  justify-content: center;
  width: 100%;
  border-radius: 0.375rem;
  border: none;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

.track {
  display: inline-flex;
  margin-top: 0.75rem;
  padding: 0.5rem 1rem;
  color: #242525;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 500;
  justify-content: center;
  width: 100%;
  border-radius: 0.375rem;
  border: 1px solid #D1D5DB;
  background-color: #fff;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

@keyframes animate {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(1.09);
  }
}
</style>
<body>

  
  <h2>Hey <%= curUser.username %>...</h2>
  <% if (abc && abc.length === 0) { %>
   <p>All Setup, Create new Note </p>
<% } else { %>
    <div class="rows row-col-6">
      
        <% abc.forEach((el) => { %>
            <div class="card mt-5">
                <form method="post" action="/notes/show/<%= el._id %>?_method=DELETE">
                    <button class="dismiss" type="submit">Ã—</button>
                </form>
                <div class="header">
                    <div class="content">
                        <span class="title"><%= el.title %></span>
                        <p class="message"><%= el.content.slice(0,40) %>..</p>
                    </div>
                    <div class="actions">
                      <form method="get" action="/notes/show/<%= el._id %>/edit">
                          <button class="history" type="submit">Update</button>
                      </form>
                      <button class="history view-btn mt-2" type="button" data-note-title="<%= el.title %>" data-note-content="<%= el.content %>">View</button>
                  </div>
                    <footer>
                      <% const month = ["January","February","March","April","May","June","July","August","September","October","November","December"];const d = new Date();let name = month[d.getMonth()];%>
                      <% let date=el.created.getDate() %>
                      <% let year=el.created.getFullYear()  %>
                      <small class="ms-auto"><%= date%> <%= name %>, <%= year %></small>
                    </footer>
                </div>
            </div>
        <% }) %>
    </div>
<% } %>
      
    </div>
</body>
<script>
  document.addEventListener("DOMContentLoaded", function() {
      let btns = document.querySelectorAll(".view-btn");
      let popoverContainer;

      // Function to close the popover
      const closePopover = () => {
          if (popoverContainer) {
              popoverContainer.remove();
              popoverContainer = null;
          }
      };

      // Event listener for view buttons
      btns.forEach((btn) => {
          btn.addEventListener("click", (event) => {
              // Prevent default behavior
              event.preventDefault();
              event.stopPropagation();

              const title = btn.getAttribute("data-note-title");
              const content = btn.getAttribute("data-note-content");
              const popoverContent = `
                  <div class="popover" role="tooltip">
                      <div class="popover-header">${title}</div>
                      <div class="popover-body">${content}</div>
                      <button class="closeBtn btn btn-danger btn-sm">X</button>
                  </div>
              `;

              // Create a container for the popover
              popoverContainer = document.createElement('div');
              popoverContainer.innerHTML = popoverContent;

              // Append the popover to the document body
              document.body.appendChild(popoverContainer);
              document.querySelector(".closeBtn").addEventListener("click",closePopover);
          });
      });

      // Event listener for clicks outside the popover
      
      document.addEventListener('click', (event) => {
          const isOutsidePopover = popoverContainer && !popoverContainer.contains(event.target);
          if (isOutsidePopover) {
              closePopover();
          }
      });
  });
</script>
